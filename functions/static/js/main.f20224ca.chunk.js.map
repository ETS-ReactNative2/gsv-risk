{"version":3,"sources":["assets/gsv-risk.svg","js/components/Factor.js","js/components/BaseModal.js","js/util.js","js/components/Results.js","js/components/Main.js","index.js"],"names":["module","exports","__webpack_require__","p","Input","props","_this","Object","classCallCheck","this","_super","call","state","inputChanging","value","setState","input","e","key","handleTextBlur","factor","finalValue","isBase","baseInput","onFactorInputChange","react_default","a","createElement","className","basePrompt","prompt","_this2","inputValue","baseValue","_step","_iterator","_createForOfIteratorHelper","options","s","n","done","option","err","f","react_select_browser_esm","classNamePrefix","onMenuOpen","handleMenuOpen","onMenuClose","handleMenuClose","onChange","values","handleSelectChange","renderPrompt","_this3","type","onFocus","handleTextChange","target","onKeyPress","handleKeyPress","onBlur","content","renderSelectContent","renderNumberContent","hasvalue","ischanging","React","Component","factors","BaseModal_createForOfIteratorHelper","customizeBase","push","Factor_Input","id","onFactorBaseChange","renderFactors","onClick","onCloseModal","class","MAX_GSV","MIN_GSV","MASK_HELP_RATIO","RED_GSV","RED_HUE","GREEN_HUE","INITIAL_FACTORS","label","example","overrideBase","meta","calculateGsv","baseFactorValues","compareFactorValues","util_createForOfIteratorHelper","resultFromFactorValues","factorValues","inner","transmission","masks","infected","Math","pow","interactions","baseResult","compareResult","gsv","log","cleanValue","min","max","getInputFromFactor","arguments","length","undefined","parsedVal","parseFloat","_step2","_iterator2","calculateLogFraction","maxGsv","log10","getRandomInt","floor","random","Results","viruses","nextVirusId","timerID","setInterval","updateCoronas","coronaHSLObjectFromFrac","frac","h","l","coronaMaxSizeFromFrac","round","_","cloneDeep","remove","v","lat","size","Results_createForOfIteratorHelper","virus","speed","color","newVirus","lng","xmlns","version","width","height","viewBox","preserveAspectRatio","transform","fill","concat","stroke","d","style","bottom","left","transitionDuration","renderVirusSVG","heightPercent","gsvToColor","backgroundColor","toFixed","getGsvText","renderViruses","Main","uri","URI","qParams","query","Main_createForOfIteratorHelper","hasQuery","removeQuery","baseParam","bValue","window","history","replaceState","toString","baseModalOpen","curr","addQuery","encodeURIComponent","pushState","_step3","_iterator3","_step4","_iterator4","handleFactorInputChange","react_transition_group","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionEnterTimeout","transitionLeave","transitionLeaveTimeout","baseModal","BaseModal_Input","handleToggleBaseModal","handleFactorBaseChange","src","logo","alt","renderFadeWrap","Results_Results","ReactDOM","render","Main_Main","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8vDCGnBC,0CAEnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXC,eAAe,GAHAP,+DAOFQ,GACfL,KAAKM,SAAS,CACZC,MAAOF,EACPD,eAAe,6CAIFC,GACfL,KAAKM,SAAS,CACZC,MAAOF,EACPD,eAAe,2CAIJI,EAAGH,GACF,UAAVG,EAAEC,KACJT,KAAKU,eAAeL,0CAITA,GACb,IAAIM,EAASX,KAAKJ,MAAMe,OACpBC,EAAaP,GAAmB,IAAVA,EAAcA,EAAQ,KAC5CL,KAAKJ,MAAMiB,OACbF,EAAOG,UAAYF,EAEnBD,EAAOJ,MAAQK,EAEjBZ,KAAKJ,MAAMmB,oBAAoBJ,GAC/BX,KAAKM,SAAS,CACZC,MAAO,GACPH,eAAe,+CAIAC,GACjB,IAAIM,EAASX,KAAKJ,MAAMe,OACpBX,KAAKJ,MAAMiB,OACbF,EAAOG,UAAYT,EAAMA,MAEzBM,EAAOJ,MAAQF,EAAMA,MAEvBL,KAAKJ,MAAMmB,oBAAoBJ,GAC/BX,KAAKM,SAAS,CACZC,MAAO,GACPH,eAAe,6CAKjBJ,KAAKM,SAAS,CACZF,eAAe,8CAKjBJ,KAAKM,SAAS,CACZC,MAAO,GACPH,eAAe,2CAKjB,OACEY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZnB,KAAKJ,MAAMiB,OAASb,KAAKJ,MAAMe,OAAOS,WAAapB,KAAKJ,MAAMe,OAAOU,sDAKtD,IAAAC,EAAAtB,KACduB,EAAavB,KAAKJ,MAAMiB,OAAUb,KAAKJ,MAAMe,OAAOG,WAAad,KAAKJ,MAAMe,OAAOa,UAAaxB,KAAKJ,MAAMe,OAAOJ,MACpHF,EAAQ,KAEZ,GAAIkB,GAA6B,IAAfA,EAAkB,KAAAE,EAAAC,EAAAC,EACb3B,KAAKJ,MAAMe,OAAOiB,SADL,IAClC,IAAAF,EAAAG,MAAAJ,EAAAC,EAAAI,KAAAC,MAAgD,KAArCC,EAAqCP,EAAApB,MAC9C,GAAI2B,EAAO3B,QAAUkB,EAAY,CAC/BlB,EAAQ2B,EACR,QAJ8B,MAAAC,GAAAP,EAAAlB,EAAAyB,GAAA,QAAAP,EAAAQ,KASpC,OACElB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBACfH,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQhB,UAAU,oCAAoCiB,gBAAgB,SAC9DR,QAAS5B,KAAKJ,MAAMe,OAAOiB,QAASvB,MAAOA,EAC3CgC,WAAY,kBAAMf,EAAKgB,kBAAkBC,YAAa,kBAAMjB,EAAKkB,mBACjEC,SAAU,SAACC,GAAD,OAAYpB,EAAKqB,mBAAmBD,MACrD1C,KAAK4C,4DAKQvC,GAAO,IAAAwC,EAAA7C,KACzB,OACEgB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,SAAOC,UAAS,oCACV2B,KAAK,SAASzC,MAAOA,EACrB0C,QAAS,SAACvC,GAAD,OAAOqC,EAAKG,iBAAiBxC,EAAEyC,OAAO5C,QAC/CoC,SAAU,SAACjC,GAAD,OAAOqC,EAAKG,iBAAiBxC,EAAEyC,OAAO5C,QAChD6C,WAAY,SAAC1C,GAAD,OAAOqC,EAAKM,eAAe3C,EAAGH,IAC1C+C,OAAQ,SAAC5C,GAAD,OAAOqC,EAAKnC,eAAeF,EAAEyC,OAAO5C,UAEjDL,KAAK4C,iDAMV,IAAMrC,EAAQP,KAAKG,MAAMC,cAAgBJ,KAAKG,MAAMI,MAAQP,KAAKJ,MAAMe,OAAOJ,MACxEgB,EAAahB,GAAmB,IAAVA,EAAcA,EAAQ,GAAK,GAEjDO,EAAYd,KAAKG,MAAMC,cAAgBJ,KAAKG,MAAMI,MAAQP,KAAKJ,MAAMe,OAAOG,UAC5EU,EAAYV,GAA2B,IAAdA,EAAkBA,EAAY,GAAMd,KAAKG,MAAMC,cAAgB,GAAKJ,KAAKJ,MAAMe,OAAOa,UAAY,GAE3HnB,EAAQL,KAAKJ,MAAMiB,OAASW,EAAYD,EAExC8B,EAAUrD,KAAKJ,MAAMe,OAAOiB,QAAU5B,KAAKsD,sBAAwBtD,KAAKuD,oBAAoBlD,GAClG,OACEW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASqC,SAAUnD,EAAQ,OAAS,QAASoD,WAAYzD,KAAKG,MAAMC,cAAgB,IAChGiD,UAlI0BK,IAAMC,m+CCCpBhE,0CAEnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,GAFIN,8DAKH,IAAA4B,EAAAH,EAAAtB,KACV4D,EAAU,GADAlC,EAAAmC,EAEO7D,KAAKJ,MAAMgE,SAFlB,IAEd,IAAAlC,EAAAG,MAAAJ,EAAAC,EAAAI,KAAAC,MAAyC,KAA9BpB,EAA8Bc,EAAApB,MACnCM,EAAOmD,eAAiBnD,EAAOS,YACjCwC,EAAQG,KACN/C,EAAAC,EAAAC,cAAC8C,EAAD,CAAQnD,QAAQ,EAAMF,OAAQA,EAAQF,IAAKE,EAAOsD,GAC1ClD,oBAAqB,SAACJ,GAAD,OAAYW,EAAK1B,MAAMsE,mBAAmBvD,QAN/D,MAAAsB,GAAAP,EAAAlB,EAAAyB,GAAA,QAAAP,EAAAQ,IAUd,OAAO0B,mCAGA,IAAAf,EAAA7C,KACP,OACEgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,4CAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACZnB,KAAKmE,kBAIVnD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACViD,QAAS,kBAAMvB,EAAKjD,MAAMyE,iBAChCrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,KAAGoD,MAAM,kCAnCcZ,IAAMC,+hCCJlC,IAAMY,EAAU,GACVC,EAAU,GAEVC,EAAkB,GAElBC,EAAU,GACVC,EAAU,EACVC,EAAY,IAEZC,EAAkB,CAC7B,CACEZ,GAAI,eACJ5C,OAAQ,6DACRyC,eAAe,EACfhB,KAAM,SACNlB,QAAS,CACP,CACEvB,MAAS,EACTyE,MAAS,wBACTC,QAAW,mCAEb,CACE1E,MAAS,EACTyE,MAAS,uBACTC,QAAW,uCAEb,CACE1E,MAAS,GACTyE,MAAS,sBACTC,QAAW,4BAEb,CACE1E,MAAS,GACTyE,MAAS,yBACTC,QAAW,8BAEb,CACE1E,MAAS,GACTyE,MAAS,+BACTC,QAAW,gDAGfC,cAAc,EACdxD,UAAW,EACXjB,MAAO,MAET,CACE0D,GAAI,eACJ5C,OAAQ,0CACRD,WAAY,6CACZ0C,eAAe,EACfmB,KAAM,uBACNnC,KAAM,SACNkC,cAAc,EACdxD,UAAW,GACXjB,MAAO,MAET,CACE0D,GAAI,QACJ5C,OAAQ,gDACRD,WAAY,qCACZ0C,eAAe,EACfmB,KAAM,mCACNnC,KAAM,SACNkC,cAAc,EACdxD,UAAW,IACXjB,MAAO,MAET,CACE0D,GAAI,WACJ5C,OAAQ,oDACRyC,eAAe,EACfmB,KAAM,oBACNnC,KAAM,SACNkC,cAAc,EACdxD,UAAW,IACXjB,MAAO,OAIJ,SAAS2E,EAAatB,GAC3B,IADoCnC,EAChC0D,EAAmB,GACnBC,EAAsB,GAFU1D,EAAA2D,EAGfzB,GAHe,IAGpC,IAAAlC,EAAAG,MAAAJ,EAAAC,EAAAI,KAAAC,MAA8B,KAAnBpB,EAAmBc,EAAApB,MAC5B+E,EAAoBzE,EAAOsD,IAAMtD,EAAOJ,OAA0B,IAAjBI,EAAOJ,MAAcI,EAAOJ,MAAQI,EAAOa,UAC5F2D,EAAiBxE,EAAOsD,IAAMtD,EAAOqE,aAAeI,EAAoBzE,EAAOsD,IAAMtD,EAAOa,WAL1D,MAAAS,GAAAP,EAAAlB,EAAAyB,GAAA,QAAAP,EAAAQ,IAQpC,IAAMoD,EAAyB,SAACC,GAC9B,IACMC,EAAQ,GADID,EAAaE,aAAe,KAAQ,EAAKF,EAAaG,MAAQ,KAASjB,EAAkBc,EAAaE,aAAe,KAAQF,EAAaG,MAAQ,OACrIH,EAAaI,SAAW,KAEvD,OADe,EAAAC,KAAAC,IAAKL,EAASD,EAAaO,eAItCC,EAAaT,EAAuBH,GACpCa,EAAgBV,EAAuBF,GAEvCa,EAAML,KAAKM,IAAI,EAAIF,GAAiBJ,KAAKM,IAAI,EAAIH,GAEnDI,EAAaP,KAAKQ,IAAIH,GAAOA,EAAK1B,GACtC,OAAOqB,KAAKS,IAAIF,EAAY3B,GAGvB,SAAS8B,EAAmB3F,GAAwB,IACnDJ,EADmDgG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAClC5F,EAAOG,UAAYH,EAAOJ,MACjD,GAAoB,WAAhBI,EAAOmC,KAAmB,CAC5B,IAAM4D,EAAYC,WAAWpG,GAC7B,GAAImG,GAA2B,IAAdA,EAAiB,CAChC,GAAI/F,EAAOiB,QAAS,KAAAgF,EAAAC,EAAAxB,EACG1E,EAAOiB,SADV,IAClB,IAAAiF,EAAAhF,MAAA+E,EAAAC,EAAA/E,KAAAC,MAAqC,CACnC,GADmC6E,EAAAvG,MACxBA,QAAUqG,EACnB,OAAOA,GAHO,MAAAzE,GAAA4E,EAAArG,EAAAyB,GAAA,QAAA4E,EAAA3E,IAMlB,OAAO,KAEP,OAAOwE,EAGT,OAAO,KAEJ,OAAInG,GAGJ,KAeF,SAASuG,EAAqBb,GAAuB,IAAlBc,EAAkBR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAThC,EACjD,OAAOqB,KAAKoB,MAAMpB,KAAKQ,IAAIH,EAAM,EAAGc,IAAWnB,KAAKoB,MAAMD,GASrD,SAASE,EAAaZ,GAC3B,OAAOT,KAAKsB,MAAMtB,KAAKuB,SAAWvB,KAAKsB,MAAMb,w9CC/I/C,IAEqBe,0CAEnB,SAAAA,EAAYxH,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoH,IACjBvH,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXkH,QAAS,GACTC,YAAa,GAJEzH,kEAQC,IAAAyB,EAAAtB,KAClBA,KAAKuH,QAAUC,YACb,kBAAMlG,EAAKmG,iBACX,6CAKF,IAAMC,EAA0B,SAACC,GAE/B,MAAO,CAAEC,EADED,GAAQhD,EAAUC,GAAcA,EAC1B/C,EAAG,IAAKgG,EAAGZ,EAAa,OAGrCa,EAAwB,SAACH,GAE7B,OAAO/B,KAAKS,IAAIT,KAAKmC,MAAM,GAAKJ,GAAO,IAGnC1B,EAAMjG,KAAKJ,MAAMqG,IACjB0B,EAAOb,EAAqBb,EAAKvB,GACnC2C,EAAUW,IAAEC,UAAUjI,KAAKG,MAAMkH,SAErCW,IAAEE,OAAOb,EAAS,SAACc,GAEjB,OAAOA,EAAEC,IApCC,KAoCgBD,EAAEE,KAAOP,EAAsBH,GAAQ,IAjBrD,IAAAlG,EAAAC,EAAA4G,EAoBMjB,GApBN,IAoBd,IAAA3F,EAAAG,MAAAJ,EAAAC,EAAAI,KAAAC,MAA6B,KAAlBwG,EAAkB9G,EAAApB,MACR,IAAfkI,EAAMF,OAERE,EAAMF,KAAOpB,EAAaa,EAAsBH,IAAS,GAE3DY,EAAMH,KAAOG,EAAMC,MACfD,EAAMH,IA7CA,MA+CRG,EAAMF,KAAO,GAEfE,EAAME,MAAMb,EAAIF,EAAwBC,GAAMC,GA9BlC,MAAA3F,GAAAP,EAAAlB,EAAAyB,GAAA,QAAAP,EAAAQ,IAiCd,GAAI0D,KAAKuB,SAAWL,EAAqBb,GAAM,CAC7C,IAAIyC,EAAW,CACbzE,GAAIjE,KAAKG,MAAMmH,YACfmB,MAAOf,EAAwBC,GAC/BS,IAAK,EACLO,IAAK1B,EAAa,KAAO,EACzBoB,KAAM,EACNG,MAAQvB,EAAa,IAAM,EAAK,KAElCI,EAAQtD,KAAK2E,GAEb1I,KAAKM,SAAS,CACZ+G,QAASA,EACTC,YAAaoB,EAASzE,GAAK,SAG7BjE,KAAKM,SAAS,CACZ+G,QAASA,2CAKAoB,GACb,OACEzH,EAAAC,EAAAC,cAAA,OAAK0H,MAAM,6BAA6BC,QAAQ,MAAMC,MAAM,eAAeC,OAAO,eAAeC,QAAQ,4BAA4BC,oBAAoB,iBACvJjI,EAAAC,EAAAC,cAAA,KAAGgI,UAAU,2DAA2DC,KAAI,OAAAC,OAASX,EAAMb,EAAf,MAAAwB,OAAqBX,EAAM5G,EAA3B,OAAAuH,OAAkCX,EAAMZ,EAAxC,MAA+CwB,OAAO,QAChIrI,EAAAC,EAAAC,cAAA,QAAMoI,EAAE,upMAOd,IADc1C,EACVS,EAAU,GADAR,EAAAyB,EAEMtI,KAAKG,MAAMkH,SAFjB,IAEd,IAAAR,EAAAhF,MAAA+E,EAAAC,EAAA/E,KAAAC,MAAwC,KAA7BwG,EAA6B3B,EAAAvG,MAChCkJ,EAAQ,CACZC,OAAM,GAAAJ,OAAKb,EAAMH,IAAX,KACNqB,KAAI,GAAAL,OAAKb,EAAMI,IAAX,KACJG,MAAK,GAAAM,OAAKb,EAAMF,KAAX,MACLqB,mBAAkB,GAAAN,OAAK,IAAL,OAEpB/B,EAAQtD,KACN/C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAgBV,IAAK8H,EAAMtE,GAAIsF,MAAOA,GACnDvJ,KAAK2J,eAAepB,EAAME,UAXnB,MAAAxG,GAAA4E,EAAArG,EAAAyB,GAAA,QAAA4E,EAAA3E,IAed,OAAOmF,mCAIP,IAAIpB,EAAMjG,KAAKJ,MAAMqG,IACf2D,EAAa,GAAAR,OAAM,IAAMtC,EAAqBb,GAAjC,KACbwC,ED+BH,SAAoBxC,GACzB,IAAI0B,EAAOb,EAAqBb,EAAKvB,GAErC,aAAA0E,OADWzB,GAAQhD,EAAUC,GAAcA,EAC3C,gBClCgBiF,CAAW5D,GACzB,OACEjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcoI,MAAO,CAACR,OAAQa,EAAeE,gBAAiBrB,IAC3EzH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eDWlB,SAAoB8E,GACzB,OAAY,KAARA,EACF,GAAAmD,OAAUnD,EAAV,KACiB,KAARA,EACT,KAAAmD,OAAYnD,GACHA,EAAM,EACRA,EAAI8D,QAAQ,GAEZ9D,EAAI8D,QAAQ,GClBVC,CAAW/D,IAEdjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,wBAGCnB,KAAKiK,yBAjHqBvG,IAAMC,o/CCItBuG,0CAEnB,SAAAA,EAAYtK,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkK,GACjBrK,EAAAI,EAAAC,KAAAF,KAAMJ,GAEN,IAHiB6B,EAGX0I,EAAM,IAAIC,IACVC,EAAUF,EAAIG,OAAM,GACtB1G,EAAUiB,EALGnD,EAAA6I,EAOI3G,GAPJ,IAOjB,IAAAlC,EAAAG,MAAAJ,EAAAC,EAAAI,KAAAC,MAA8B,KAAnBpB,EAAmBc,EAAApB,MACxB8J,EAAIK,SAAS7J,EAAOsD,MACtBtD,EAAOJ,MAAQ8J,EAAQ1J,EAAOsD,IAC9BtD,EAAOJ,MAAQ+F,EAAmB3F,GACb,OAAjBA,EAAOJ,OACT4J,EAAIM,YAAY9J,EAAOsD,KAI3B,IAAMyG,EAAY,OAAS/J,EAAOsD,GAClC,GAAItD,EAAOmD,eAAiBqG,EAAIK,SAASE,GAAY,CACnD/J,EAAOG,UAAYuJ,EAAQK,GAC3B,IAAMC,EAASrE,EAAmB3F,GAAQ,GAC3B,OAAXgK,GACFR,EAAIM,YAAYC,GAChB/J,EAAOG,UAAY,MAEnBH,EAAOa,UAAYmJ,IAxBR,MAAA1I,GAAAP,EAAAlB,EAAAyB,GAAA,QAAAP,EAAAQ,IAAA,OA4BjB0I,OAAOC,QAAQC,aAAa,KAAM,WAAYX,EAAIY,YAElDlL,EAAKM,MAAQ,CACXyD,QAASA,EACToH,eAAe,GAhCAnL,sEAoCKc,GACtB,IAD8BiG,EAC1BhD,EAAUoE,IAAEC,UAAUjI,KAAKG,MAAMyD,SADPiD,EAAA0D,EAEX3G,GAFW,IAE9B,IAAAiD,EAAAhF,MAAA+E,EAAAC,EAAA/E,KAAAC,MAA4B,KAAjBkJ,EAAiBrE,EAAAvG,MAC1B,GAAI4K,EAAKhH,KAAOtD,EAAOsD,GAAI,CACzB,IAAM1D,EAAQ+F,EAAmB3F,GACjCsK,EAAK1K,MAAQA,EACTI,EAAOqE,eAAiBzE,GAAmB,IAAVA,KACnC0K,EAAKzJ,UAAYjB,GAGnB,IAAI4J,EAAM,IAAIC,IACdD,EAAIM,YAAYQ,EAAKhH,KACjBgH,EAAK1K,OAAwB,IAAf0K,EAAK1K,QACrB4J,EAAIe,SAASD,EAAKhH,GAAIkH,mBAAmBF,EAAK1K,QAEhDqK,OAAOC,QAAQO,UAAU,KAAM,WAAYjB,EAAIY,YAE/C,QAjB0B,MAAA9I,GAAA4E,EAAArG,EAAAyB,GAAA,QAAA4E,EAAA3E,IAqB9BlC,KAAKM,SAAS,CACZsD,QAASA,mDAIUjD,GACrB,IAD6B0K,EACzBzH,EAAUoE,IAAEC,UAAUjI,KAAKG,MAAMyD,SADR0H,EAAAf,EAEV3G,GAFU,IAE7B,IAAA0H,EAAAzJ,MAAAwJ,EAAAC,EAAAxJ,KAAAC,MAA4B,KAAjBkJ,EAAiBI,EAAAhL,MAC1B,GAAI4K,EAAKhH,KAAOtD,EAAOsD,IAAMtD,EAAOmD,cAAe,CACjD,IAAMhD,EAAYwF,EAAmB3F,GAAQ,GACzCwJ,EAAM,IAAIC,IACRM,EAAY,OAAS/J,EAAOsD,GAClCkG,EAAIM,YAAYC,IACZ5J,GAA2B,IAAdA,KACfmK,EAAKzJ,UAAYV,EACjBqJ,EAAIe,SAASR,EAAWS,mBAAmBrK,KAE7C8J,OAAOC,QAAQO,UAAU,KAAM,WAAYjB,EAAIY,YAE/C,QAdyB,MAAA9I,GAAAqJ,EAAA9K,EAAAyB,GAAA,QAAAqJ,EAAApJ,IAkB7BlC,KAAKM,SAAS,CACZsD,QAASA,oDAKX5D,KAAKM,SAAS,CACZ0K,eAAgBhL,KAAKG,MAAM6K,wDAIf,IAAAO,EAAAjK,EAAAtB,KACV4D,EAAU,GADA4H,EAAAjB,EAEOvK,KAAKG,MAAMyD,SAFlB,IAEd,IAAA4H,EAAA3J,MAAA0J,EAAAC,EAAA1J,KAAAC,MAAyC,KAA9BpB,EAA8B4K,EAAAlL,MAKvC,GAJAuD,EAAQG,KACN/C,EAAAC,EAAAC,cAAC8C,EAAD,CAAQrD,OAAQA,EAAQF,IAAKE,EAAOsD,GAC5BlD,oBAAqB,SAACJ,GAAD,OAAYW,EAAKmK,wBAAwB9K,OAEnD,OAAjBA,EAAOJ,YAAmCkG,IAAjB9F,EAAOJ,MAClC,OARU,MAAA0B,GAAAuJ,EAAAhL,EAAAyB,GAAA,QAAAuJ,EAAAtJ,IAWd,OAAO0B,yCAGMP,GACb,OACErC,EAAAC,EAAAC,cAACwK,EAAA,mBAAD,CAAoBC,eAAe,WACfC,kBAAkB,EAClBC,wBAAyB,IACzBC,iBAAiB,EACjBC,uBAAwB,IACxBC,iBAAiB,EACjBC,uBAAwB,KACzC5I,oCAKE,IAAAR,EAAA7C,KACDkM,EACJlL,EAAAC,EAAAC,cAACiL,EAAD,CAAWvI,QAAS5D,KAAKG,MAAMyD,QACpBS,aAAc,kBAAMxB,EAAKuJ,yBACzBlI,mBAAoB,SAACvD,GAAD,OAAYkC,EAAKwJ,uBAAuB1L,MAGzE,OACEK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYmL,IAAKC,IAAMC,IAAI,aAC1CxL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,aAGFH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,wBACViD,QAAS,kBAAMvB,EAAKuJ,0BAC1BpL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAf,wBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAIjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZnB,KAAKyM,eAAezM,KAAKmE,kBAG5BnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACwL,EAAD,CAASzG,IAAKf,EAAalF,KAAKG,MAAMyD,aAIzC5D,KAAKyM,eAAezM,KAAKG,MAAM6K,cAAgBkB,EAAY,IAE5DlL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2BAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,0HA5JwBuC,IAAMC,WCNxCgJ,IAASC,OAAO5L,EAAAC,EAAAC,cAAC2L,EAAD,MAAUC,SAASC,eAAe","file":"static/js/main.f20224ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gsv-risk.1ebd4893.svg\";","import React from 'react';\nimport Select from 'react-select';\n\nexport default class Input extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputChanging: false\n    };\n  }\n\n  handleInputFocus(value) {\n    this.setState({\n      input: value,\n      inputChanging: true\n    });\n  }\n\n  handleTextChange(value) {\n    this.setState({\n      input: value,\n      inputChanging: true\n    });\n  }\n\n  handleKeyPress(e, value) {\n    if (e.key === 'Enter') {\n      this.handleTextBlur(value);\n    }\n  }\n\n  handleTextBlur(value) {\n    let factor = this.props.factor;\n    let finalValue = value || value === 0 ? value : null;\n    if (this.props.isBase) {\n      factor.baseInput = finalValue;\n    } else {\n      factor.input = finalValue;\n    }\n    this.props.onFactorInputChange(factor);\n    this.setState({\n      input: '',\n      inputChanging: false\n    });\n  }\n\n  handleSelectChange(value) {\n    let factor = this.props.factor;\n    if (this.props.isBase) {\n      factor.baseInput = value.value;\n    } else {\n      factor.input = value.value;\n    }\n    this.props.onFactorInputChange(factor);\n    this.setState({\n      input: '',\n      inputChanging: false\n    });\n  }\n\n  handleMenuOpen() {\n    this.setState({\n      inputChanging: true\n    });\n  }\n\n  handleMenuClose() {\n    this.setState({\n      input: '',\n      inputChanging: false\n    });\n  }\n\n  renderPrompt() {\n    return (\n      <div className=\"Factor-prompt\">\n        {this.props.isBase ? this.props.factor.basePrompt : this.props.factor.prompt}\n      </div>\n    );\n  }\n\n  renderSelectContent() {\n    const inputValue = this.props.isBase ? (this.props.factor.baseInput || this.props.factor.baseValue) : this.props.factor.input;\n    let value = null;\n\n    if (inputValue || inputValue === 0) {\n      for (const option of this.props.factor.options) {\n        if (option.value === inputValue) {\n          value = option;\n          break;\n        }\n      }\n    }\n\n    return (\n      <label className=\"Factor-label\">\n        <Select className=\"Factor-input Factor-input--select\" classNamePrefix=\"Select\"\n                options={this.props.factor.options} value={value}\n                onMenuOpen={() => this.handleMenuOpen()} onMenuClose={() => this.handleMenuClose()}\n                onChange={(values) => this.handleSelectChange(values)} />\n        {this.renderPrompt()}\n      </label>\n    )\n  }\n\n  renderNumberContent(value) {\n    return (\n      <label className=\"Factor-label\">\n        <input className={`Factor-input Factor-input--number`}\n              type=\"number\" value={value}\n              onFocus={(e) => this.handleTextChange(e.target.value)}\n              onChange={(e) => this.handleTextChange(e.target.value)}\n              onKeyPress={(e) => this.handleKeyPress(e, value)}\n              onBlur={(e) => this.handleTextBlur(e.target.value)}>\n        </input>\n        {this.renderPrompt()}\n      </label>\n    )\n  }\n\n  render() {\n    const input = this.state.inputChanging ? this.state.input : this.props.factor.input;\n    const inputValue = input || input === 0 ? input + '' : '';\n\n    const baseInput = this.state.inputChanging ? this.state.input : this.props.factor.baseInput;\n    const baseValue = baseInput || baseInput === 0 ? baseInput + '' : (this.state.inputChanging ? '' : this.props.factor.baseValue + '');\n\n    const value = this.props.isBase ? baseValue : inputValue;\n\n    const content = this.props.factor.options ? this.renderSelectContent() : this.renderNumberContent(value);\n    return (\n      <div className=\"Factor\" hasvalue={value ? 'true' : 'false'} ischanging={this.state.inputChanging + ''}>\n        {content}\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport Factor from './Factor.js';\n\nexport default class Input extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  renderFactors() {\n    let factors = [];\n    for (const factor of this.props.factors) {\n      if (factor.customizeBase && factor.basePrompt) {\n        factors.push(\n          <Factor isBase={true} factor={factor} key={factor.id}\n                  onFactorInputChange={(factor) => this.props.onFactorBaseChange(factor)} />\n        );\n      }\n    }\n    return factors;\n  }\n\n  render() {\n    return (\n      <div className=\"BaseModal\">\n        <div className=\"BaseModal-content\">\n          <h2 className=\"BaseModal-heading\">\n            What are your grocery store visits like?\n          </h2>\n          <div className=\"BaseModal-factors\">\n            {this.renderFactors()}\n          </div>\n        </div>\n\n        <button className=\"BaseModal-close\"\n                onClick={() => this.props.onCloseModal()}>\n          <div className=\"BaseModal-closeIcon\">\n            <i class=\"fas fa-times-circle\"></i>\n          </div>\n        </button>\n      </div>\n    );\n  }\n}\n","export const MAX_GSV = 50;\nexport const MIN_GSV = 0.1;\n\nexport const MASK_HELP_RATIO = 0.5;\n\nexport const RED_GSV = 25; // GSV value at which point bar color should be fully red\nexport const RED_HUE = 9;\nexport const GREEN_HUE = 123;\n\nexport const INITIAL_FACTORS = [\n  {\n    id: 'transmission',\n    prompt: 'Which best describes the type of interactions you\\'ll have?',\n    customizeBase: false,\n    type: 'number',\n    options: [\n      {\n        'value': 2,\n        'label': 'Brief outdoor contact',\n        'example': 'Passing by somone on a sidewalk'\n      },\n      {\n        'value': 5,\n        'label': 'Brief indoor contact',\n        'example': 'Slipping by somone in a store aisle'\n      },\n      {\n        'value': 10,\n        'label': 'Brief close contact',\n        'example': 'Sharing a small elevator'\n      },\n      {\n        'value': 25,\n        'label': 'Extended close contact',\n        'example': 'Having dinner with someone'\n      },\n      {\n        'value': 50,\n        'label': 'Significant physical contact',\n        'example': 'Repeated hugging, shoulder to shoulder, etc'\n      }\n    ],\n    overrideBase: false,\n    baseValue: 5,\n    input: null\n  },\n  {\n    id: 'interactions',\n    prompt: 'How many people will you interact with?',\n    basePrompt: 'How many people come within 6 feet of you?',\n    customizeBase: true,\n    meta: '[INPUT] interactions',\n    type: 'number',\n    overrideBase: false,\n    baseValue: 15,\n    input: null\n  },\n  {\n    id: 'masks',\n    prompt: 'What percent of people will be wearing masks?',\n    basePrompt: 'What percent of people wear masks?',\n    customizeBase: true,\n    meta: '[INPUT]% of people wearing masks',\n    type: 'number',\n    overrideBase: false,\n    baseValue: 100,\n    input: null\n  },\n  {\n    id: 'infected',\n    prompt: 'What percent of people in your area are infected?',\n    customizeBase: false,\n    meta: '[INPUT]% infected',\n    type: 'number',\n    overrideBase: true,\n    baseValue: 1.2,\n    input: null\n  }\n]\n\nexport function calculateGsv(factors) {\n  let baseFactorValues = {};\n  let compareFactorValues = {};\n  for (const factor of factors) {\n    compareFactorValues[factor.id] = factor.input || factor.input === 0 ? factor.input : factor.baseValue;\n    baseFactorValues[factor.id] = factor.overrideBase ? compareFactorValues[factor.id] : factor.baseValue;\n  }\n\n  const resultFromFactorValues = (factorValues) => {\n    const transmit = (factorValues.transmission / 100) * (1 - (factorValues.masks / 100)) + (MASK_HELP_RATIO * factorValues.transmission / 100) * (factorValues.masks / 100);\n    const inner = 1 - (transmit * (factorValues.infected / 100));\n    const result = 1 - (inner ** factorValues.interactions);\n    return result;\n  }\n\n  const baseResult = resultFromFactorValues(baseFactorValues);\n  const compareResult = resultFromFactorValues(compareFactorValues);\n\n  const gsv = Math.log(1 - compareResult) / Math.log(1 - baseResult);\n\n  let cleanValue = Math.min(gsv || gsv, MAX_GSV);\n  return Math.max(cleanValue, MIN_GSV);\n}\n\nexport function getInputFromFactor(factor, isBase = false) {\n  const input = isBase ? factor.baseInput : factor.input;\n  if (factor.type === 'number') {\n    const parsedVal = parseFloat(input);\n    if (parsedVal || parsedVal === 0) {\n      if (factor.options) {\n        for (const option of factor.options) {\n          if (option.value === parsedVal) {\n            return parsedVal;\n          }\n        }\n        return null;\n      } else {\n        return parsedVal;\n      }\n    } else {\n      return null;\n    }\n  } else if (input) {\n    return input;\n  }\n  return null;\n}\n\nexport function getGsvText(gsv) {\n  if (gsv === 50) {\n    return `${gsv}+`;\n  } else if (gsv === 0.1) {\n    return `< ${gsv}`;\n  } else if (gsv < 5) {\n    return gsv.toFixed(1);\n  } else {\n    return gsv.toFixed(0);\n  }\n}\n\nexport function calculateLogFraction(gsv, maxGsv = MAX_GSV) {\n  return Math.log10(Math.min(gsv + 1, maxGsv)) / Math.log10(maxGsv);\n}\n\nexport function gsvToColor(gsv) {\n  let frac = calculateLogFraction(gsv, RED_GSV);\n  var hue = (frac * (RED_HUE - GREEN_HUE)) + GREEN_HUE;\n  return `hsl(${hue}, 100%, 43%)`;\n}\n\nexport function getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));;\n}\n","import React from 'react';\nimport _ from 'lodash';\n\nimport {\n  getGsvText, calculateLogFraction, gsvToColor, getRandomInt,\n  RED_GSV, RED_HUE, GREEN_HUE\n} from '../util.js';\n\nconst MAX_LAT = 102;\n\nexport default class Results extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      viruses: [],\n      nextVirusId: 0\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.updateCoronas(),\n      500\n    );\n  }\n\n  updateCoronas() {\n    const coronaHSLObjectFromFrac = (frac) => {\n      var hue = (frac * (RED_HUE - GREEN_HUE)) + GREEN_HUE;\n      return { h: hue, s: 100, l: getRandomInt(100) };\n    }\n\n    const coronaMaxSizeFromFrac = (frac) => {\n      // Max size is max of 20 * frac and 4 (note: 2 is added after this is called)\n      return Math.max(Math.round(20 * frac), 4);\n    }\n\n    const gsv = this.props.gsv;\n    const frac = calculateLogFraction(gsv, RED_GSV);\n    let viruses = _.cloneDeep(this.state.viruses);\n\n    _.remove(viruses, (v) => {\n      // Remove if lat is beyond the top or if size is too large (because GSV decreased)\n      return v.lat > MAX_LAT || v.size > coronaMaxSizeFromFrac(frac) + 2;\n    });\n\n    for (const virus of viruses) {\n      if (virus.size === 1) {\n        // All viruses start at size = 1 and grow on first movement\n        virus.size = getRandomInt(coronaMaxSizeFromFrac(frac)) + 2\n      }\n      virus.lat += virus.speed;\n      if (virus.lat > MAX_LAT) {\n        // Decrease size when virus passes top of bar\n        virus.size = 0\n      }\n      virus.color.h = coronaHSLObjectFromFrac(frac).h\n    }\n\n    if (Math.random() < calculateLogFraction(gsv)) {\n      let newVirus = {\n        id: this.state.nextVirusId,\n        color: coronaHSLObjectFromFrac(frac),\n        lat: 0,\n        lng: getRandomInt(110) - 5, // [-5, 105)% allows virsuses to be slightly outside bar\n        size: 1,\n        speed: (getRandomInt(12) / 4) + 1.5 // [1.5, 4.5) in 0.25 intervals\n      }\n      viruses.push(newVirus)\n\n      this.setState({\n        viruses: viruses,\n        nextVirusId: newVirus.id + 1\n      });\n    } else {\n      this.setState({\n        viruses: viruses\n      });\n    }\n  }\n\n  renderVirusSVG(color) {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.0\" width=\"900.000000pt\" height=\"900.000000pt\" viewBox=\"0 0 900.000000 900.000000\" preserveAspectRatio=\"xMidYMid meet\">\n        <g transform=\"translate(0.000000,900.000000) scale(0.100000,-0.100000)\" fill={`hsl(${color.h}, ${color.s}%, ${color.l}%)`} stroke=\"none\">\n          <path d=\"M3415 8604 c-123 -17 -336 -90 -504 -173 -172 -84 -241 -187 -197 -292 26 -61 86 -97 186 -109 172 -22 316 -172 374 -390 37 -140 49 -178 75 -247 33 -85 33 -86 -69 -128 -36 -15 -69 -31 -74 -36 -19 -18 -56 -10 -65 14 -14 36 -72 90 -119 111 -41 19 -45 19 -100 2 -140 -43 -271 -135 -312 -221 -20 -40 -21 -51 -11 -90 6 -24 11 -48 11 -54 0 -6 -33 -32 -72 -57 -40 -26 -84 -58 -98 -70 -99 -90 -126 -114 -135 -114 -13 0 -136 126 -189 193 -51 65 -98 134 -120 177 -20 39 -56 196 -56 242 0 17 -10 62 -21 100 -16 52 -32 81 -60 109 -36 36 -43 39 -97 39 -166 0 -457 -177 -565 -344 -71 -109 -85 -233 -36 -331 37 -73 63 -83 165 -62 113 23 204 22 252 -3 73 -40 382 -349 382 -383 0 -7 -15 -28 -33 -47 -63 -69 -134 -157 -212 -260 -43 -58 -81 -109 -85 -113 -9 -11 -56 10 -102 45 -49 38 -77 100 -88 194 -7 64 -13 82 -31 97 -57 46 -189 -14 -279 -126 -78 -96 -150 -268 -150 -356 0 -50 40 -107 81 -116 34 -8 121 0 183 17 45 11 108 -2 164 -35 29 -17 32 -23 26 -51 -3 -17 -12 -38 -20 -47 -8 -8 -14 -20 -14 -25 0 -8 -47 -112 -72 -158 -6 -11 -14 -31 -18 -45 -5 -14 -18 -51 -30 -81 -47 -122 -52 -136 -60 -170 -4 -19 -13 -48 -19 -65 -6 -16 -13 -42 -16 -56 -2 -15 -11 -29 -19 -32 -8 -3 -56 3 -107 14 -50 10 -104 19 -118 19 -39 0 -124 32 -162 62 -19 14 -41 41 -50 59 -9 19 -31 64 -49 101 -35 74 -75 108 -127 108 -58 0 -170 -102 -209 -190 -64 -144 -91 -349 -61 -461 23 -88 93 -149 169 -149 40 0 119 41 182 94 77 66 126 96 155 96 25 0 94 -21 129 -39 9 -5 36 -16 60 -25 99 -37 122 -50 122 -65 0 -9 -7 -65 -16 -125 -13 -88 -15 -164 -11 -400 3 -160 9 -308 13 -330 6 -37 6 -38 -17 -31 -13 5 -58 33 -99 64 -98 73 -125 88 -181 96 -127 19 -199 -50 -244 -233 -40 -166 24 -406 160 -596 103 -144 155 -178 218 -144 12 7 77 66 143 132 67 65 127 117 134 114 7 -2 25 -40 40 -83 15 -44 35 -100 44 -125 9 -25 21 -57 25 -71 5 -14 13 -34 18 -45 6 -10 17 -35 25 -54 9 -19 36 -77 62 -128 44 -90 54 -122 39 -122 -5 -1 -37 -28 -72 -60 -101 -93 -133 -106 -271 -102 -146 3 -202 -10 -241 -57 -39 -48 -44 -81 -23 -169 52 -223 259 -452 407 -452 81 0 147 71 187 203 12 39 29 90 38 112 33 84 140 225 170 225 10 -1 56 -53 105 -119 126 -169 313 -367 474 -504 40 -34 73 -67 73 -74 0 -6 -13 -32 -30 -56 -16 -25 -30 -48 -30 -53 0 -4 -9 -27 -21 -50 -31 -66 -73 -96 -162 -118 -92 -23 -133 -58 -161 -136 -22 -61 -18 -97 21 -176 28 -58 105 -132 163 -156 116 -49 224 -78 289 -78 49 0 112 20 140 44 31 27 61 92 61 135 0 18 -7 61 -17 95 -9 34 -16 100 -17 151 0 75 4 97 22 132 29 53 44 58 90 30 20 -13 44 -27 52 -30 8 -4 29 -16 45 -26 31 -20 275 -142 333 -167 18 -7 47 -20 65 -27 51 -23 110 -45 136 -53 13 -3 39 -13 58 -20 33 -14 33 -15 19 -43 -17 -31 -118 -128 -150 -142 -103 -46 -214 -138 -245 -203 -50 -109 -13 -167 193 -301 173 -112 284 -155 402 -155 153 0 261 56 337 174 29 46 31 56 32 141 0 104 -16 152 -75 225 -72 89 -109 163 -87 177 16 9 80 5 162 -11 83 -17 340 -36 480 -36 127 0 344 16 460 35 164 26 195 28 196 13 3 -37 -4 -87 -17 -117 -8 -18 -14 -40 -14 -47 0 -8 -13 -42 -29 -76 -54 -119 -60 -151 -39 -221 15 -49 88 -123 143 -145 87 -33 217 -26 350 19 17 6 44 15 60 19 85 24 212 86 256 126 19 16 50 49 69 74 34 43 35 46 35 135 -1 106 -18 147 -94 221 -41 41 -208 134 -240 134 -5 0 -13 4 -16 10 -6 10 16 22 195 96 115 48 139 60 280 137 109 59 246 147 394 252 26 19 52 35 56 35 15 0 134 -148 167 -207 46 -81 46 -162 2 -260 -25 -53 -32 -83 -33 -135 -1 -60 2 -70 30 -104 37 -46 113 -86 174 -92 54 -5 174 25 257 64 117 55 245 171 296 268 50 96 60 137 61 256 1 105 -1 118 -22 147 -12 17 -37 39 -55 48 -42 22 -159 55 -195 55 -43 0 -168 44 -213 76 -63 43 -149 136 -149 159 1 11 32 53 71 94 101 106 175 199 317 396 16 22 59 91 96 153 37 61 71 112 75 112 5 0 14 -7 21 -15 7 -8 16 -15 21 -15 31 0 214 -133 278 -203 47 -50 51 -57 91 -134 55 -107 126 -173 187 -173 79 0 253 78 320 145 56 55 131 258 154 418 10 72 10 98 -1 140 -21 81 -42 103 -114 117 -54 10 -68 9 -121 -10 -202 -70 -265 -74 -346 -20 -24 16 -62 42 -84 57 -51 34 -150 83 -168 83 -8 0 -22 9 -32 21 -17 18 -17 24 -6 52 7 18 18 49 23 70 6 21 24 50 41 65 98 86 124 127 151 234 15 61 15 69 0 115 -9 26 -25 59 -36 72 -16 21 -18 35 -13 95 10 117 25 209 37 223 18 22 237 17 323 -7 93 -26 143 -44 157 -58 7 -7 17 -12 23 -12 7 0 31 -14 53 -30 23 -17 45 -30 50 -30 4 0 13 -5 19 -11 7 -7 35 -20 63 -30 49 -17 52 -17 115 3 89 27 126 54 154 113 35 73 52 155 58 283 5 100 3 119 -17 172 -23 61 -56 104 -103 133 -38 25 -142 57 -182 57 -38 0 -101 -43 -168 -116 -30 -32 -68 -60 -100 -74 -47 -21 -61 -22 -152 -15 -55 4 -143 10 -195 14 l-95 6 -12 100 c-6 55 -15 143 -19 195 l-6 95 33 14 c42 18 106 76 127 115 77 142 70 340 -15 455 -72 98 -180 136 -267 95 -41 -20 -62 -14 -77 23 -12 29 -20 49 -64 148 -42 95 -68 146 -98 199 -36 63 -33 84 18 102 79 29 141 45 190 50 45 5 59 1 140 -42 89 -47 91 -47 185 -47 96 0 121 7 186 53 32 23 54 74 54 127 0 63 -23 202 -38 230 -7 12 -12 29 -12 38 0 20 -84 192 -105 215 -8 9 -15 20 -15 24 0 16 -151 205 -210 263 -82 80 -132 101 -206 83 -41 -10 -65 -24 -98 -57 -63 -62 -84 -109 -131 -293 -34 -130 -71 -200 -137 -252 -63 -51 -101 -64 -139 -48 -56 23 -88 122 -52 162 24 27 23 125 -2 164 -45 70 -154 167 -235 209 -33 17 -136 18 -171 2 -10 -5 -25 1 -43 18 -15 14 -72 59 -127 101 -54 41 -99 79 -99 84 0 8 56 97 101 162 10 15 19 29 19 32 0 10 99 151 127 181 67 72 160 125 221 125 43 1 107 35 136 72 70 92 -7 250 -189 389 -33 25 -67 49 -75 52 -8 4 -28 16 -45 27 -115 74 -241 119 -330 119 -130 0 -151 -53 -124 -311 6 -57 17 -120 25 -141 8 -20 14 -52 14 -70 0 -65 -70 -265 -120 -342 -10 -16 -29 -50 -42 -74 -12 -24 -28 -45 -34 -48 -6 -2 -38 9 -70 26 -33 16 -85 41 -117 55 l-57 27 6 69 c9 98 -8 153 -66 211 -69 69 -148 93 -307 93 -119 1 -122 0 -164 -29 -35 -25 -46 -41 -64 -95 l-22 -65 -74 3 c-123 6 -132 13 -118 107 5 33 14 125 18 205 15 225 45 364 93 420 7 9 42 38 78 65 73 55 90 74 108 124 21 60 -13 131 -83 169 -55 30 -148 42 -370 49 -209 5 -223 5 -266 -15 -57 -26 -97 -78 -105 -134 -10 -77 26 -123 118 -148 72 -20 117 -99 118 -205 0 -66 -17 -239 -35 -345 -8 -47 -17 -107 -20 -134 -3 -27 -12 -60 -21 -73 -13 -21 -21 -24 -72 -21 -55 3 -58 4 -74 40 -26 55 -78 78 -173 78 -45 0 -90 -6 -112 -15 -19 -8 -44 -15 -54 -15 -21 0 -89 -56 -89 -74 0 -35 -73 -63 -206 -81 -48 -6 -52 -5 -70 22 -28 42 -54 122 -54 168 0 22 -7 65 -15 95 -8 30 -15 72 -15 93 0 21 -8 52 -17 70 -12 24 -16 58 -16 142 0 108 1 111 45 210 80 180 82 286 6 348 -32 25 -45 29 -114 32 -44 2 -92 1 -109 -1z\" />\n        </g>\n      </svg>\n    );\n  }\n\n  renderViruses() {\n    let viruses = [];\n    for (const virus of this.state.viruses) {\n      const style = {\n        bottom: `${virus.lat}%`,\n        left: `${virus.lng}%`,\n        width: `${virus.size}px`,\n        transitionDuration: `${500}ms`\n      }\n      viruses.push(\n        <span className=\"Results-virus\" key={virus.id} style={style}>\n          {this.renderVirusSVG(virus.color)}\n        </span>\n      );\n    }\n    return viruses;\n  }\n\n  render() {\n    let gsv = this.props.gsv;\n    const heightPercent = `${100 * calculateLogFraction(gsv)}%`;\n    const color = gsvToColor(gsv);\n    return (\n      <div className=\"Results\">\n        <div className=\"Results-bar\" style={{height: heightPercent, backgroundColor: color}}>\n          <div className=\"Results-num\">\n            {getGsvText(gsv)}\n          </div>\n          <div className=\"Results-label\">\n            Grocery Store Visits\n          </div>\n          {this.renderViruses()}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport _ from 'lodash';\nimport URI from 'urijs';\nimport 'focus-visible/dist/focus-visible.min.js';\n\nimport BaseModal from './BaseModal.js';\nimport Factor from './Factor.js';\nimport Results from './Results.js';\n\nimport { INITIAL_FACTORS, calculateGsv, getInputFromFactor } from '../util.js';\n\nimport logo from '../../assets/gsv-risk.svg';\n\nexport default class Main extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    const uri = new URI();\n    const qParams = uri.query(true);\n    let factors = INITIAL_FACTORS;\n\n    for (const factor of factors) {\n      if (uri.hasQuery(factor.id)) {\n        factor.input = qParams[factor.id];\n        factor.input = getInputFromFactor(factor);\n        if (factor.input === null) {\n          uri.removeQuery(factor.id);\n        }\n      }\n\n      const baseParam = 'base' + factor.id;\n      if (factor.customizeBase && uri.hasQuery(baseParam)) {\n        factor.baseInput = qParams[baseParam];\n        const bValue = getInputFromFactor(factor, true);\n        if (bValue === null) {\n          uri.removeQuery(baseParam);\n          factor.baseInput = null;\n        } else {\n          factor.baseValue = bValue;\n        }\n      }\n    }\n    window.history.replaceState(null, 'GSV Risk', uri.toString());\n\n    this.state = {\n      factors: factors,\n      baseModalOpen: false\n    };\n  }\n\n  handleFactorInputChange(factor) {\n    let factors = _.cloneDeep(this.state.factors);\n    for (const curr of factors) {\n      if (curr.id === factor.id) {\n        const input = getInputFromFactor(factor);\n        curr.input = input;\n        if (factor.overrideBase && (input || input === 0)) {\n          curr.baseValue = input\n        }\n\n        let uri = new URI();\n        uri.removeQuery(curr.id);\n        if (curr.input || curr.input === 0) {\n          uri.addQuery(curr.id, encodeURIComponent(curr.input));\n        }\n        window.history.pushState(null, 'GSV Risk', uri.toString());\n\n        break;\n      }\n    }\n\n    this.setState({\n      factors: factors\n    })\n  }\n\n  handleFactorBaseChange(factor) {\n    let factors = _.cloneDeep(this.state.factors);\n    for (const curr of factors) {\n      if (curr.id === factor.id && factor.customizeBase) {\n        const baseInput = getInputFromFactor(factor, true);\n        let uri = new URI();\n        const baseParam = 'base' + factor.id;\n        uri.removeQuery(baseParam);\n        if (baseInput || baseInput === 0) {\n          curr.baseValue = baseInput;\n          uri.addQuery(baseParam, encodeURIComponent(baseInput));\n        }\n        window.history.pushState(null, 'GSV Risk', uri.toString());\n\n        break;\n      }\n    }\n\n    this.setState({\n      factors: factors\n    })\n  }\n\n  handleToggleBaseModal() {\n    this.setState({\n      baseModalOpen: !this.state.baseModalOpen\n    })\n  }\n\n  renderFactors() {\n    let factors = [];\n    for (const factor of this.state.factors) {\n      factors.push(\n        <Factor factor={factor} key={factor.id}\n                onFactorInputChange={(factor) => this.handleFactorInputChange(factor)} />\n      );\n      if (factor.input === null || factor.input === undefined) {\n        break;\n      }\n    }\n    return factors;\n  }\n\n  renderFadeWrap(content) {\n    return (\n      <CSSTransitionGroup transitionName=\"FadeAnim\"\n                          transitionAppear={true}\n                          transitionAppearTimeout={400}\n                          transitionEnter={true}\n                          transitionEnterTimeout={400}\n                          transitionLeave={true}\n                          transitionLeaveTimeout={400}>\n        {content}\n      </CSSTransitionGroup>\n    );\n  }\n\n  render() {\n    const baseModal = (\n      <BaseModal factors={this.state.factors}\n                 onCloseModal={() => this.handleToggleBaseModal()}\n                 onFactorBaseChange={(factor) => this.handleFactorBaseChange(factor)} />\n    );\n\n    return (\n      <div className=\"Main\">\n        <header className=\"Main-header\">\n          <div className=\"Main-titleLogo\">\n            <img className=\"Main-logo\" src={logo} alt=\"GSV Risk\" />\n            <h1 className=\"Main-title\">GSV Risk</h1>\n          </div>\n\n          <button className=\"Main-baseValuesButton\"\n                  onClick={() => this.handleToggleBaseModal()}>\n            <div className=\"Main-baseValuesText\">Customize base visit</div>\n            <i className=\"fas fa-sliders-h\"></i>\n          </button>\n        </header>\n\n        <div className=\"Main-container l-container\">\n          <div className=\"Main-left\">\n            {this.renderFadeWrap(this.renderFactors())}\n          </div>\n\n          <div className=\"Main-right\">\n            <Results gsv={calculateGsv(this.state.factors)} />\n          </div>\n        </div>\n\n        {this.renderFadeWrap(this.state.baseModalOpen ? baseModal : '')}\n\n        <footer className=\"Main-footer l-container\">\n          <div className=\"Main-disclaimer\">This is for entertainment purposes only. Pleeeeease continue to follow your local health agency's guidelines.</div>\n        </footer>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './js/polyfill.js';\nimport './default.scss';\n\nimport Main from './js/components/Main.js';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}